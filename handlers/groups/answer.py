import emoji
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from filters import IsOurChats
from loader import dp, bot
from states import Answer


@dp.message_handler(Command("answer"), IsOurChats())
async def answer(message: types.Message, state: FSMContext):
    args = message.get_args()
    await Answer.chat_id.set()
    await state.update_data(chat_id=args)
    await message.answer(f'–ñ–¥—É —Ç–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–ª–∞—Ç—å –µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É! {emoji.emojize("üßê")}')
    await Answer.Answer.set()


@dp.message_handler(IsOurChats(), state=Answer.Answer)
async def answer_state(message: types.Message, state: FSMContext):
    await state.update_data(message_text=message.text)
    data = await state.get_data()
    message_text = data.get("message_text")
    chat_id = data.get("chat_id")
    await bot.send_message(int(chat_id),
                           f'{emoji.emojize("üò≥")} –í–Ω–∏–º–∞–Ω–∏–µ! {emoji.emojize("üò≥")}\n\n'
                           f'–ü—Ä–∏—à–µ–ª –æ—Ç–≤–µ—Ç –ø–æ —Ç–≤–æ–µ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:\n'
                           f'{message_text}\n\n'
                           f'–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!\n'
                           f'–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! {emoji.emojize("üôÇ")}\n')
    await message.answer(f'–û—Ç–≤–µ—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! {emoji.emojize("‚úÖ")}')
    await state.finish()